/*
 * Copyright (c) 2011 Hitesh Shankarrao Jyoti Sathawane, Dombivli, MH, 421201, India.
 * mailto:hiteshsathawane@gmail.com. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in 
 *    the documentation and/or other materials provided with the
 *    distribution.
 * 3. Redistributions in any form must be accompanied by information on
 *    how to obtain complete source code for the WaterMarker software.
 *
 *
 * This software is provided "as is", without warranty of any kind, express or 
 * implied, including but not limited to the warranties of merchantability,   
 * fitness for a particular purpose and noninfringement.  In no event shall
 * Copyright holder be liable for any claim, damages or other liability,
 * whether in an action of contract, tort or otherwise,  arising from,out of
 * or in connection with Watermarker or the use or other dealings in
 * Watermarker.
 */
package GUI;

import java.awt.Color;
import java.awt.Font;
import java.awt.Frame;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.image.BufferedImage;
import java.util.Iterator;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPanel;
import WaterMarker.*;
import WatermarkHelper.*;
import java.io.File;
import java.util.ArrayList;
import java.util.regex.Pattern;
import javax.swing.JTextField;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.Document;
import javax.swing.text.PlainDocument;

/**
 * @author Hitesh Shankarrao Jyoti Sathawane
 * Created on January 13, 2010
 * WaterMarker 3.0
 * CaptionGUI.java
 * The Class is main class to Open Caption GUI
 */
public class CaptionGUI extends javax.swing.JFrame {

    WaterMarkHelper captionHelper;
    Font textFont = null;
    Color textColor = null;
    ArrayList inputFileList = null;
    javax.swing.JPanel[] jFileListPanel;
    javax.swing.JLabel[] jFileListLabel;
    boolean isUpdate = false;
    int updateIndex;
    int currentIndex = 0;

    public CaptionGUI(WaterMarkHelper helper, boolean Update, int Index) {
        captionHelper = helper;
        captionHelper.getMainStatus().setText(captionHelper.getProperty("message.caption.open"));
        isUpdate = Update;
        updateIndex = Index;
        initComponents();
    }

    /**
     *  GUI for Adding new Caption Watermarker.
     * @param  Watermark Helper
     */
    public CaptionGUI(WaterMarkHelper helper) {
        captionHelper = helper;
        captionHelper.getMainStatus().setText(captionHelper.getProperty("message.caption.open"));
        initComponents();

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {
        ArrayList watermarkerList = captionHelper.getWaterMarkerList();
        int indexCount = 0;
        for (Iterator it = watermarkerList.iterator(); it.hasNext();) {
            ArrayList currentWatermarker = (ArrayList) it.next();
            if (currentWatermarker.get(0).toString().equalsIgnoreCase("CAPTION")) {
                isUpdate = true;
                updateIndex = indexCount;
                break;
            }
            indexCount++;
        }
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        ImagePanel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jSlider1 = new javax.swing.JSlider();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        HspaceLabel = new javax.swing.JLabel();
        VspaceLabel = new javax.swing.JLabel();
        jTextField4 = new CaptionNumericTextField();
        jTextField5 = new CaptionNumericTextField();
        HSpaceTextField = new CaptionNumericTextField();
        VSpaceTextField = new CaptionNumericTextField();
        jButton4 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        textColor = new java.awt.Color(0, 0, 0);
        textFont = new Font("Arial", Font.BOLD, 12);

        setTitle(captionHelper.getProperty("title.caption.gui"));
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setBackground(new java.awt.Color(51, 51, 51));
        setResizable(false);
        setAlwaysOnTop(true);
        addWindowListener(new WindowAdapter() {

            public void windowClosing(WindowEvent evt) {
                Frame frame = (Frame) evt.getSource();
                frame.dispose();
                captionHelper.setEnable(captionHelper.getMainFrame());
                captionHelper.getMainStatus().setText(captionHelper.getProperty("message.caption.close"));
            }
        });
        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        jLabel1.setBackground(new java.awt.Color(204, 204, 204));
        jLabel1.setFont(new java.awt.Font("Palatino Linotype", 0, 18));
        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setText("Caption Watermarker");

        jLabel2.setFont(new java.awt.Font("Palatino Linotype", 0, 11));
        jLabel2.setForeground(new java.awt.Color(255, 102, 0));
        jLabel2.setText("[?]");
        jLabel2.setToolTipText(captionHelper.getProperty("help.caption"));
        jPanel3.setBackground(new java.awt.Color(51, 51, 51));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 255), 1, true), "Images List", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Palatino Linotype", 0, 11), new java.awt.Color(0, 153, 255))); // NOI18N

        jPanel7.setBackground(new java.awt.Color(51, 51, 51));
        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255)));
        jPanel7.setForeground(new java.awt.Color(51, 51, 51));

        ImagePanel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
                jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(ImagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE));
        jPanel7Layout.setVerticalGroup(
                jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(ImagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE));

        jPanel5.setBackground(new java.awt.Color(51, 51, 51));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
                jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 288, Short.MAX_VALUE));
        jPanel5Layout.setVerticalGroup(
                jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 112, Short.MAX_VALUE));

        jScrollPane2.setViewportView(jPanel5);

        jLabel4.setFont(new java.awt.Font("Palatino Linotype", 0, 10)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 153, 255));
        jLabel4.setText("File");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addContainerGap().addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup().addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 312, Short.MAX_VALUE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))).addContainerGap()));
        jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE).addGap(12, 12, 12)));
        jPanel2.setBackground(new java.awt.Color(51, 51, 51));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 255), 1, true), "Set Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Palatino Linotype", 0, 11), new java.awt.Color(0, 153, 255))); // NOI18N

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        String text[] = (String[]) captionHelper.getInputFilesCaption().get(0);
        if (text[0] != null) {
            String textValue = "";
            for (int i = 0; i < text.length; i++) {
                textValue = textValue + text[i] + "\n";
            }
            jTextArea1.setText(textValue);
        } else {
            jTextArea1.setText("");
        }
        jScrollPane1.setViewportView(jTextArea1);

        jLabel3.setFont(new java.awt.Font("Palatino Linotype", 0, 11));
        jLabel3.setForeground(new java.awt.Color(204, 204, 204));
        jLabel3.setText("Fill");

        jTextField1.setText("100%");
        jTextField1.setEditable(false);

        jSlider1.setMinimum(5);
        jSlider1.setValue(100);
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {

            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                FillChangeAction(evt);
            }
        });


        jButton1.setText("Choose Color");
        jButton1.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseColourAction(evt);
            }
        });

        jButton2.setText("Choose Font");
        jButton2.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectFontAction(evt);
            }
        });

        jButton5.setText("Save Caption");
        jButton5.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SetCaption(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addContainerGap().addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addComponent(jLabel3).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(8, 8, 8).addComponent(jSlider1, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE).addGap(6, 6, 6).addComponent(jButton1)).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup().addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 337, Short.MAX_VALUE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false).addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))).addContainerGap()));
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addContainerGap().addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jSlider1, 0, 0, Short.MAX_VALUE).addComponent(jButton1).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel3).addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false).addGroup(jPanel2Layout.createSequentialGroup().addComponent(jButton2).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jButton5)).addComponent(jScrollPane1, 0, 0, Short.MAX_VALUE)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

        jPanel4.setBackground(new java.awt.Color(51, 51, 51));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 255), 1, true), "Position Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Palatino Linotype", 0, 11), new java.awt.Color(0, 153, 255))); // NOI18N

        jLabel8.setForeground(new java.awt.Color(204, 204, 204));
        jLabel8.setText("Choose Position");

        jLabel9.setBackground(new java.awt.Color(204, 204, 204));
        jLabel9.setFont(new java.awt.Font("Palatino Linotype", 0, 11));
        jLabel9.setForeground(new java.awt.Color(204, 204, 204));
        jLabel9.setText("X");

        jLabel10.setFont(new java.awt.Font("Palatino Linotype", 0, 11));
        jLabel10.setForeground(new java.awt.Color(204, 204, 204));
        jLabel10.setText("Y");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"Top Left", "Top Center", "Top Right", "Middle Left", "Middle Center", "Middle Right", "Bottom Left", "Bottom Center", "Bottom Right", "Coustome"}));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkCoustomePositon(evt);
            }
        });

        HspaceLabel.setFont(new java.awt.Font("Palatino Linotype", 0, 11));
        HspaceLabel.setForeground(new java.awt.Color(204, 204, 204));
        HspaceLabel.setText("Space from Left Edge");

        VspaceLabel.setFont(new java.awt.Font("Palatino Linotype", 0, 11));
        VspaceLabel.setForeground(new java.awt.Color(204, 204, 204));
        VspaceLabel.setText("Space from Top Edge");

        jTextField4.setToolTipText("X position");
        jTextField4.setEnabled(false);
        jTextField4.addFocusListener(new java.awt.event.FocusAdapter() {

            public void focusLost(java.awt.event.FocusEvent evt) {
                XcheckNumber(evt);
            }
        });

        jTextField5.setToolTipText("Y position");
        jTextField5.setEnabled(false);
        jTextField5.addFocusListener(new java.awt.event.FocusAdapter() {

            public void focusLost(java.awt.event.FocusEvent evt) {
                YcheckNumber(evt);
            }
        });

        HSpaceTextField.setText("0");
        HSpaceTextField.setToolTipText("Set Horizontal spacing (pix) from image Edge");
        HSpaceTextField.addFocusListener(new java.awt.event.FocusAdapter() {

            public void focusLost(java.awt.event.FocusEvent evt) {
                HspaceNumberCheck(evt);
            }
        });

        VSpaceTextField.setText("0");
        VSpaceTextField.setToolTipText("Set Vertical spacing (pix) from image Edge");
        VSpaceTextField.addFocusListener(new java.awt.event.FocusAdapter() {

            public void focusLost(java.awt.event.FocusEvent evt) {
                VspaceNumberCheck(evt);
            }
        });


        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel4Layout.createSequentialGroup().addContainerGap().addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel8).addGroup(jPanel4Layout.createSequentialGroup().addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false).addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jLabel9)).addGap(33, 33, 33).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false).addComponent(jTextField4, 0, 0, Short.MAX_VALUE).addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))).addGap(70, 70, 70).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jComboBox1, 0, 287, Short.MAX_VALUE).addGroup(jPanel4Layout.createSequentialGroup().addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(VspaceLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE).addComponent(HspaceLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false).addComponent(VSpaceTextField).addComponent(HSpaceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))).addContainerGap()));
        jPanel4Layout.setVerticalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel4Layout.createSequentialGroup().addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel8).addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel9).addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(HSpaceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(HspaceLabel)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(VSpaceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(VspaceLabel)).addComponent(jLabel10)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
        jButton4.setText("Cancel");
        jButton4.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelFont(evt);
            }
        });

        jButton3.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddCaptionWatermarker(evt);
            }
        });

        if (isUpdate) {
            ArrayList EditList = (ArrayList) captionHelper.getWaterMarkerList().get(updateIndex);
            int Fill = Integer.parseInt(EditList.get(9).toString());
            Font f = (Font) EditList.get(7);
            Color c = (Color) EditList.get(8);
            String imagePosition = EditList.get(10).toString();
            String X = EditList.get(11).toString();
            String Y = EditList.get(12).toString();
            String hSpace = EditList.get(13).toString();
            String vSpace = EditList.get(14).toString();
            jTextField4.setText(X);
            jTextField5.setText(Y);
            jSlider1.setValue(Fill);
            jTextArea1.setFont(f);
            jTextArea1.setForeground(c);
            jComboBox1.setSelectedItem(imagePosition);
            jTextField1.setText(String.valueOf(Fill) + "%");
            HSpaceTextField.setText(hSpace);
            VSpaceTextField.setText(vSpace);
            jButton3.setText("Update");
        } else {
            jTextArea1.setFont(textFont);
            jTextArea1.setForeground(textColor);
            jTextField5.setText("0");
            jTextField4.setText("0");
            HSpaceTextField.setText("0");
            VSpaceTextField.setText("0");
            jSlider1.setValue(100);
            jTextField1.setText("100%");
            jButton3.setText("Add");

        }
        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup().addContainerGap().addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(jPanel1Layout.createSequentialGroup().addComponent(jLabel1).addGap(137, 137, 137).addComponent(jLabel2)).addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addContainerGap()).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup().addGap(85, 85, 85).addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 195, Short.MAX_VALUE).addComponent(jButton4).addGap(79, 79, 79)));
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addContainerGap().addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel2).addComponent(jLabel1)).addGap(1, 1, 1).addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(4, 4, 4).addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButton4).addComponent(jButton3)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap(29, Short.MAX_VALUE)));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap(20, Short.MAX_VALUE)));

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width - 525) / 2, (screenSize.height - 537) / 2, 525, 537);
        inputFileList = captionHelper.getInputFiles();
        jFileListPanel = new javax.swing.JPanel[inputFileList.size()];
        jFileListLabel = new javax.swing.JLabel[inputFileList.size()];
        jPanel5.setLayout(new BoxLayout(jPanel5, BoxLayout.Y_AXIS));
        int i = 0;
        for (Iterator it = inputFileList.iterator(); it.hasNext();) {
            jFileListPanel[i] = new JPanel();
            jFileListPanel[i].setBackground(new java.awt.Color(51, 51, 51));

            jFileListPanel[i].setLayout(new BoxLayout(jFileListPanel[i], BoxLayout.Y_AXIS));
            jFileListLabel[i] = new JLabel();
            File inputfile = (File) it.next();
            String texts = inputfile.getPath();
            jFileListLabel[i].setText(texts);
            final int index = i;
            jFileListLabel[i].addMouseListener(new java.awt.event.MouseAdapter() {

                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    SetSelection(evt, index);
                }
            });
            jFileListLabel[i].setForeground(new java.awt.Color(255, 153, 0));
            jFileListPanel[i].add(jFileListLabel[i]);
            jPanel5.add(jFileListPanel[i]);
            jPanel5.revalidate();
            jPanel5.repaint();
            i++;
        }
        jFileListPanel[0].setBackground(new java.awt.Color(255, 255, 153));
        File firstImage = (File) inputFileList.get(0);
        BufferedImage image = captionHelper.getPreview(firstImage);
        String selectedFilePath = firstImage.getPath();
        if (selectedFilePath.length() > 70) {
            selectedFilePath = selectedFilePath.substring(0, 70) + "...";
        }
        jLabel4.setText(selectedFilePath);
        RescaleImage previewImage = new RescaleImage();
        BufferedImage result = previewImage.RescaleImage(captionHelper, image, 90, 120);
        ImageIcon i2i = new ImageIcon(result);
        ImagePanel.setIcon(i2i);
        jPanel7.repaint();
        jPanel7.revalidate();
    }// </editor-fold>

    private void FillChangeAction(javax.swing.event.ChangeEvent evt) {
        captionHelper.sliderChangeAction(jSlider1, jTextField1);
    }

    /**
     * Opens Color Chooser for choosing color
     *
     * @param Button click Evnet
     */
    private void chooseColourAction(java.awt.event.ActionEvent evt) {
        jFColorChooser1 = new javax.swing.JColorChooser();
        textColor = javax.swing.JColorChooser.showDialog(
                CaptionGUI.this,
                "Choose Color",
                jTextArea1.getBackground());

        if (textColor != null) {
            jTextArea1.setForeground(textColor);
        } else {
            textColor = jTextArea1.getBackground();
        }

    }

    /**
     * Opens Font Chooser for choosing font
     *
     * @param Button click Evnet
     */
    private void selectFontAction(java.awt.event.ActionEvent evt) {
        JFontChooser chooser = new JFontChooser(jTextArea1.getFont());

        if (chooser.showDialog(this, "Choose a font...") == JFontChooser.ACCEPT_OPTION) {
            if (textFont != null) {

                textFont = chooser.getSelectedFont();

                jTextArea1.setFont(textFont);
            }
        }

    }

    /**
     * Check position Image watermark and change Display labels accordingly
     * enable and disable of textfield components
     * @param  Combobox change selected event
     * 
     */
    private void checkCoustomePositon(java.awt.event.ActionEvent evt) {

        if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Coustome")) {
            jTextField4.setEnabled(true);
            jTextField5.setEnabled(true);
            VSpaceTextField.setEnabled(false);
            VSpaceTextField.setText("0");
            HSpaceTextField.setEnabled(false);
            HSpaceTextField.setText("0");
            HspaceLabel.setText("Not Applicable");
            VspaceLabel.setText("Not Applicable");
        } else {
            jTextField4.setEnabled(false);
            jTextField4.setText("0");
            jTextField5.setEnabled(false);
            jTextField5.setText("0");
            if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Top Left")) {
                HspaceLabel.setText("Space from Left Edge");
                VspaceLabel.setText("Space from Top Edge");
                VSpaceTextField.setEnabled(true);
                VSpaceTextField.setText("0");
                HSpaceTextField.setEnabled(true);
                HSpaceTextField.setText("0");
            } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Top Center")) {
                HspaceLabel.setText("Not Applicable");
                HSpaceTextField.setEnabled(false);
                HSpaceTextField.setText("0");
                VspaceLabel.setText("Space from Top Edge");
                VSpaceTextField.setEnabled(true);
                VSpaceTextField.setText("0");
            } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Top Right")) {
                HspaceLabel.setText("Space from Right Edge");
                HSpaceTextField.setEnabled(true);
                HSpaceTextField.setText("0");
                VspaceLabel.setText("Space from Top Edge");
                VSpaceTextField.setEnabled(true);
                VSpaceTextField.setText("0");
            } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Middle Left")) {
                HspaceLabel.setText("Space from Left Edge");
                HSpaceTextField.setEnabled(true);
                HSpaceTextField.setText("0");
                VspaceLabel.setText("Not Applicable");
                VSpaceTextField.setEnabled(false);
                VSpaceTextField.setText("0");

            } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Middle Center")) {
                HspaceLabel.setText("Not Applicable");
                HSpaceTextField.setEnabled(false);
                HSpaceTextField.setText("0");
                VspaceLabel.setText("Not Applicable");
                VSpaceTextField.setEnabled(false);
                VSpaceTextField.setText("0");
            } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Middle Right")) {
                HspaceLabel.setText("Space from Right Edge");
                HSpaceTextField.setEnabled(true);
                HSpaceTextField.setText("0");
                VspaceLabel.setText("Not Applicable");
                VSpaceTextField.setEnabled(false);
                VSpaceTextField.setText("0");
            } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Bottom Left")) {
                HspaceLabel.setText("Space from Left Edge");
                HSpaceTextField.setEnabled(true);
                HSpaceTextField.setText("0");
                VspaceLabel.setText("Space from Bottom Edge");
                VSpaceTextField.setEnabled(true);
                VSpaceTextField.setText("0");
            } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Bottom Center")) {
                HspaceLabel.setText("Not Applicable");
                HSpaceTextField.setEnabled(false);
                HSpaceTextField.setText("0");
                VspaceLabel.setText("Space from Bottom Edge");
                VSpaceTextField.setEnabled(true);
                VSpaceTextField.setText("0");
            } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Bottom Right")) {
                HspaceLabel.setText("Space from Right Edge");
                HSpaceTextField.setEnabled(true);
                HSpaceTextField.setText("0");
                VspaceLabel.setText("Space from Bottom Edge");
                VSpaceTextField.setEnabled(true);
                VSpaceTextField.setText("0");
            }
        }

    }

    /**
     * X position validation .
     *
     * @param Focus loose event
     */
    private void XcheckNumber(java.awt.event.FocusEvent evt) {
        captionHelper.checkNumber(jTextField4);
    }

    /**
     * Y position validation .
     *
     * @param Focus loose event
     */
    private void YcheckNumber(java.awt.event.FocusEvent evt) {
        captionHelper.checkNumber(jTextField5);
    }

    /**
     * H Space Validation
     */
    private void HspaceNumberCheck(java.awt.event.FocusEvent evt) {
        captionHelper.checkNumber(HSpaceTextField);

    }

    /**
     *V Space Validation
     */
    private void VspaceNumberCheck(java.awt.event.FocusEvent evt) {
        captionHelper.checkNumber(VSpaceTextField);
    }

    /**
     * Cancel action for AddCaptionWatermarker or edit of Text Watermarker.
     *
     */
    private void CancelFont(java.awt.event.ActionEvent evt) {

        this.dispose();
        captionHelper.setEnable(captionHelper.getMainFrame());
        captionHelper.getMainStatus().setText(captionHelper.getProperty("message.caption.close"));
    }

    /**
     * Set image preview , File Name, Caption for current selected Image
     * @param mouse event
     * @param current Index of image
     */
    private void SetSelection(java.awt.event.MouseEvent evt, int index) {
        currentIndex = index;
        File firstImage = (File) captionHelper.getInputFiles().get(index);
        BufferedImage image = captionHelper.getPreview(firstImage);
        String selectedFilePath = firstImage.getPath();
        if (selectedFilePath.length() > 70) {
            selectedFilePath = selectedFilePath.substring(0, 70) + "...";
        }
        jLabel4.setText(selectedFilePath);
        for (int x = 0; x < jFileListPanel.length; x++) {
            jFileListPanel[x].setBackground(new java.awt.Color(51, 51, 51));

        }
        jFileListPanel[index].setBackground(new java.awt.Color(255, 255, 153));
        RescaleImage previewImage = new RescaleImage();
        BufferedImage result = previewImage.RescaleImage(captionHelper, image, 90, 120);
        ImageIcon i2i = new ImageIcon(result);
        ImagePanel.setIcon(i2i);
        jPanel7.repaint();
        jPanel7.revalidate();
        String text[] = (String[]) captionHelper.getInputFilesCaption().get(index);
        if (text[0] != null) {
            String textValue = "";
            for (int i = 0; i < text.length; i++) {
                textValue = textValue + text[i] + "\n";
            }
            jTextArea1.setText(textValue);
        } else {
            jTextArea1.setText("");
        }
    }

    /**
     * Adds /Update caption parameters to watermarkers list
     * @param button click event
     * 
     */
    private void AddCaptionWatermarker(java.awt.event.ActionEvent evt) {
        ArrayList CaptionData = new ArrayList();
        CaptionData.add("CAPTION");
        CaptionData.add(null);
        CaptionData.add(null);
        CaptionData.add(null);
        CaptionData.add(null);
        CaptionData.add(null);
        CaptionData.add(null);
        CaptionData.add(jTextArea1.getFont());
        CaptionData.add(jTextArea1.getForeground());
        CaptionData.add(jSlider1.getValue());
        CaptionData.add(jComboBox1.getSelectedItem().toString());
        CaptionData.add(jTextField4.getText());
        CaptionData.add(jTextField5.getText());
        CaptionData.add(HSpaceTextField.getText());
        CaptionData.add(VSpaceTextField.getText());
        if (isUpdate) {
            captionHelper.getWaterMarkerList().set(updateIndex, CaptionData);
            captionHelper.Info("Updating Caption Watermarker at Index:" + updateIndex + " with Parameters List: " + CaptionData);
        } else {
            captionHelper.getWaterMarkerList().add(CaptionData);
            captionHelper.Info("Updating Caption Watermarker at Index:" + updateIndex + " with Parameters List: " + CaptionData);
        }

        this.dispose();
        captionHelper.setEnable(captionHelper.getMainFrame());
        captionHelper.getMainWaterMarksDetails().removeAll();
        captionHelper.setWaterMarkDetails();
        captionHelper.getMainStatus().setText(captionHelper.getProperty("message.caption.success"));
    }

    /**
     * Sets caption for current selected image into caption array
     * @param button click event
     * 
     */
    private void SetCaption(java.awt.event.ActionEvent evt) {
        int index = currentIndex;
        String text = jTextArea1.getText();
        String textString[] = text.split("\n");
        captionHelper.getInputFilesCaption().set(index, textString);
    }
    // Variables declaration - do not modify
    private javax.swing.JColorChooser jFColorChooser1;
    private javax.swing.JTextField HSpaceTextField;
    private javax.swing.JLabel HspaceLabel;
    private javax.swing.JLabel ImagePanel;
    private javax.swing.JTextField VSpaceTextField;
    private javax.swing.JLabel VspaceLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    // End of variables declaration
}

@SuppressWarnings("serial")
class CaptionNumericTextField extends JTextField {

    @Override
    protected Document createDefaultModel() {
        return new NumericDocument();
    }

    private static class NumericDocument extends PlainDocument {
        // The regular expression to match input against (zero or more digits)

        private final static Pattern DIGITS = Pattern.compile("\\d*");

        @Override
        public void insertString(int offs, String str, AttributeSet a) throws BadLocationException {
            // Only insert the text if it matches the regular expression
            if (str != null && DIGITS.matcher(str).matches()) {
                super.insertString(offs, str, a);
            }
        }
    }
}
