/*
 * Copyright (c) 2011 Hitesh Shankarrao Jyoti Sathawane, Dombivli, MH, 421201, India.
 * mailto:hiteshsathawane@gmail.com. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in 
 *    the documentation and/or other materials provided with the
 *    distribution.
 * 3. Redistributions in any form must be accompanied by information on
 *    how to obtain complete source code for the WaterMarker software.
 *
 *
 * This software is provided "as is", without warranty of any kind, express or 
 * implied, including but not limited to the warranties of merchantability,   
 * fitness for a particular purpose and noninfringement.  In no event shall
 * Copyright holder be liable for any claim, damages or other liability,
 * whether in an action of contract, tort or otherwise,  arising from,out of
 * or in connection with Watermarker or the use or other dealings in
 * Watermarker.
 */
package GUI;

import java.awt.Color;
import java.awt.Frame;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import WatermarkHelper.*;
import java.util.ArrayList;
import java.util.regex.Pattern;
import javax.swing.JTextField;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.Document;
import javax.swing.text.PlainDocument;

/*
 * @author Hitesh Shankarrao Jyoti Sathawane
 * Created on January 13, 2010
 * WaterMarker 3.0
 * ShapeGUI.java
 * The Class is main class to Open Shape GUI
 */
public class ShapeGUI extends javax.swing.JFrame {

    WaterMarkHelper shapeHelper;
    Color shapeColor = null;
    boolean isUpdate = false;
    int updateIndex;

    /**
     *  GUI for Editing ShapeGUI Watermarker.
     * @param  Watermark Helper
     * @param  boolean Update if data is to be edited
     * @param  index of the element to be Edited
     */
    public ShapeGUI(WaterMarkHelper helper, boolean Update, int Index) {
        shapeHelper = helper;
        shapeHelper.getMainStatus().setText(shapeHelper.getProperty("message.shape.open"));
        isUpdate = Update;
        updateIndex = Index;
        initComponents();
    }

    /**
     *  GUI for Adding new ShapeGUI Watermarker.
     * @param  Watermark Helper
     */
    public ShapeGUI(WaterMarkHelper helper) {
        shapeHelper = helper;
        shapeHelper.getMainStatus().setText(shapeHelper.getProperty("message.shape.open"));
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new ShapeNumericTextField();
        jTextField2 = new ShapeNumericTextField();
        jTextField3 = new javax.swing.JTextField();
        jSlider1 = new javax.swing.JSlider();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        HspaceLabel = new javax.swing.JLabel();
        VspaceLabel = new javax.swing.JLabel();
        jTextField4 = new ShapeNumericTextField();
        jTextField5 = new ShapeNumericTextField();
        HspaceTextField = new ShapeNumericTextField();
        VSpaceTextField = new ShapeNumericTextField();
        jButton4 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        shapeColor = Color.WHITE;

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle(shapeHelper.getProperty("title.shape.gui"));
        setResizable(false);
        setBackground(new java.awt.Color(51, 51, 51));
        setAlwaysOnTop(true);
        addWindowListener(new WindowAdapter() {

            public void windowClosing(WindowEvent evt) {
                Frame frame = (Frame) evt.getSource();
                frame.dispose();
                shapeHelper.setEnable(shapeHelper.getMainFrame());
                shapeHelper.getMainStatus().setText(shapeHelper.getProperty("message.shape.close"));
            }
        });

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        jLabel1.setBackground(new java.awt.Color(204, 204, 204));
        jLabel1.setFont(new java.awt.Font("Palatino Linotype", 0, 18));
        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setText("Shape Watermarker");

        jLabel2.setFont(new java.awt.Font("Palatino Linotype", 0, 11));
        jLabel2.setForeground(new java.awt.Color(255, 102, 0));
        jLabel2.setText("[?]");
        jLabel2.setToolTipText(shapeHelper.getProperty("help.shape"));

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 255), 1, true), "Select Shape & Set Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Palatino Linotype", 0, 11), new java.awt.Color(0, 153, 255))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Palatino Linotype", 0, 11));
        jLabel3.setForeground(new java.awt.Color(204, 204, 204));
        jLabel3.setText("Select Shape");

        jLabel4.setFont(new java.awt.Font("Palatino Linotype", 0, 11));
        jLabel4.setForeground(new java.awt.Color(204, 204, 204));
        jLabel4.setText("Choose Color");

        jLabel5.setFont(new java.awt.Font("Palatino Linotype", 0, 11));
        jLabel5.setForeground(new java.awt.Color(204, 204, 204));
        jLabel5.setText("Height");

        jLabel6.setFont(new java.awt.Font("Palatino Linotype", 0, 11));
        jLabel6.setForeground(new java.awt.Color(204, 204, 204));
        jLabel6.setText("Width");

        jLabel7.setFont(new java.awt.Font("Palatino Linotype", 0, 11));
        jLabel7.setForeground(new java.awt.Color(204, 204, 204));
        jLabel7.setText("Fill");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"Rectrangle", "Ovel"}));
        jComboBox1.setToolTipText("Chose Shape to be Watermarked");

        jButton1.setText("Choose Color");
        jButton1.setText("Choose Colour");
        jButton1.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChooseColor(evt);
            }
        });

        jTextField1.setText("0");
        jTextField1.setToolTipText("Shape Width");
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {

            public void focusLost(java.awt.event.FocusEvent evt) {
                SapeWidthCheckNumber(evt);
            }
        });

        jTextField2.setText("0");
        jTextField2.setToolTipText("Shape Height");
        jTextField2.addFocusListener(new java.awt.event.FocusAdapter() {

            public void focusLost(java.awt.event.FocusEvent evt) {
                SapeHeightCheckNumber(evt);
            }
        });

        jTextField3.setText("100%");
        jTextField3.setToolTipText("Shape fill");
        jTextField3.setEditable(false);

        jSlider1.setMinimum(5);
        jSlider1.setValue(100);
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {

            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                FillChangeAction(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(51, 51, 51));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255)));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 27, Short.MAX_VALUE));
        jPanel4Layout.setVerticalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 23, Short.MAX_VALUE));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addContainerGap().addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel3).addComponent(jLabel5).addComponent(jLabel7)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false).addComponent(jTextField3, javax.swing.GroupLayout.Alignment.LEADING, 0, 0, Short.MAX_VALUE).addComponent(jTextField2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)).addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jSlider1, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE).addGroup(jPanel2Layout.createSequentialGroup().addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel4).addComponent(jLabel6)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addGroup(jPanel2Layout.createSequentialGroup().addGap(8, 8, 8).addComponent(jButton1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))).addContainerGap()));
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel3).addComponent(jLabel4).addComponent(jButton1)).addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel5).addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel6).addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel7).addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
        jPanel3.setBackground(new java.awt.Color(51, 51, 51));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 255), 1, true), "Set Position", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Palatino Linotype", 0, 11), new java.awt.Color(0, 153, 255))); // NOI18N

        jLabel8.setForeground(new java.awt.Color(204, 204, 204));
        jLabel8.setText("Choose Position");

        jLabel9.setBackground(new java.awt.Color(204, 204, 204));
        jLabel9.setFont(new java.awt.Font("Palatino Linotype", 0, 11));
        jLabel9.setForeground(new java.awt.Color(204, 204, 204));
        jLabel9.setText("X");

        jLabel10.setFont(new java.awt.Font("Palatino Linotype", 0, 11));
        jLabel10.setForeground(new java.awt.Color(204, 204, 204));
        jLabel10.setText("Y");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"Top Left", "Top Center", "Top Right", "Middle Left", "Middle Center", "Middle Right", "Bottom Left", "Bottom Center", "Bottom Right", "Coustome"}));
        jComboBox2.setToolTipText("Select position of shape to be watermarked");
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckPosition(evt);
            }
        });

        HspaceLabel.setFont(new java.awt.Font("Palatino Linotype", 0, 11)); // NOI18N
        HspaceLabel.setForeground(new java.awt.Color(204, 204, 204));
        HspaceLabel.setText("Space from Left Edge");

        VspaceLabel.setFont(new java.awt.Font("Palatino Linotype", 0, 11)); // NOI18N
        VspaceLabel.setForeground(new java.awt.Color(204, 204, 204));
        VspaceLabel.setText("Space from Top Edge");

        jTextField4.setToolTipText("X position");
        jTextField4.setEnabled(false);
        jTextField4.addFocusListener(new java.awt.event.FocusAdapter() {

            public void focusLost(java.awt.event.FocusEvent evt) {
                XcheckNumber(evt);
            }
        });

        jTextField5.setToolTipText("Y position");
        jTextField5.setEnabled(false);
        jTextField5.addFocusListener(new java.awt.event.FocusAdapter() {

            public void focusLost(java.awt.event.FocusEvent evt) {
                YcheckNumber(evt);
            }
        });

        HspaceTextField.setToolTipText("Set Horizontal spacing (pix) from image Edge");
        HspaceTextField.addFocusListener(new java.awt.event.FocusAdapter() {

            public void focusLost(java.awt.event.FocusEvent evt) {
                HspaceNumberCheck(evt);
            }
        });

        VSpaceTextField.setToolTipText("Set Vertical spacing (pix) from image Edge");
        VSpaceTextField.addFocusListener(new java.awt.event.FocusAdapter() {

            public void focusLost(java.awt.event.FocusEvent evt) {
                VspaceNumberCheck(evt);
            }
        });


        if (isUpdate) {
            ArrayList EditList = (ArrayList) shapeHelper.getWaterMarkerList().get(updateIndex);
            String shapeSelected = (String) EditList.get(2);
            String shapeHeight = (String) EditList.get(5);
            String shapeWidth = (String) EditList.get(6);
            Color c = (Color) EditList.get(8);
            int Fill = Integer.parseInt(EditList.get(9).toString());
            String shapePosition = EditList.get(10).toString();
            String X = EditList.get(11).toString();
            String Y = EditList.get(12).toString();
            String hSpace = EditList.get(13).toString();
            String vSpace = EditList.get(14).toString();
            jTextField2.setText(shapeHeight);
            jTextField1.setText(shapeWidth);
            shapeColor = c;
            jPanel4.setBackground(c);
            jSlider1.setValue(Fill);
            jComboBox1.setSelectedItem(shapeSelected);
            jComboBox2.setSelectedItem(shapePosition);
            jTextField4.setText(X);
            jTextField5.setText(Y);
            HspaceTextField.setText(hSpace);
            VSpaceTextField.setText(vSpace);
            jButton3.setText("Update");
            jTextField3.setText(EditList.get(9).toString() + "%");
        } else {
            jTextField1.setText("0");
            jTextField2.setText("0");
            jTextField5.setText("0");
            jTextField4.setText("0");
            jPanel4.setBackground(new java.awt.Color(255, 255, 255));
            HspaceTextField.setText("0");
            VSpaceTextField.setText("0");
            jButton3.setText("Add");
            jTextField3.setText("100%");
        }

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addContainerGap().addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel8).addGroup(jPanel3Layout.createSequentialGroup().addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false).addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jLabel9)).addGap(33, 33, 33).addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false).addComponent(jTextField4, 0, 0, Short.MAX_VALUE).addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))).addGap(26, 26, 26).addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false).addComponent(VspaceLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(HspaceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE).addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false).addComponent(HspaceTextField).addComponent(VSpaceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))).addComponent(jComboBox2, 0, 263, Short.MAX_VALUE)).addContainerGap()));
        jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel8).addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel9).addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(HspaceLabel).addComponent(HspaceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(VspaceLabel).addComponent(VSpaceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addComponent(jLabel10)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
        jButton4.setText("Cancel");
        jButton4.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cancel(evt);
            }
        });

        jButton3.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddShapeWatermarker(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addContainerGap().addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup().addComponent(jLabel1).addGap(114, 114, 114).addComponent(jLabel2))).addContainerGap()).addGroup(jPanel1Layout.createSequentialGroup().addGap(67, 67, 67).addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 148, Short.MAX_VALUE).addComponent(jButton4).addGap(74, 74, 74)));
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addContainerGap().addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel2).addComponent(jLabel1)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButton3).addComponent(jButton4)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE));

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width - 472) / 2, (screenSize.height - 345) / 2, 472, 345);
    }// </editor-fold>

    /**
     * Sets value of Image Fill in respective Textfield for display of value
     * @param  Slider Change Even
     * 
     */
    private void FillChangeAction(javax.swing.event.ChangeEvent evt) {
        shapeHelper.sliderChangeAction(jSlider1, jTextField3);
    }

    /**
     * Check position ShapeGUI watermark and change Display labels accordingly
     * enable and disable of textfield components
     * @param  Combobox change selected event
     * 
     */
    private void CheckPosition(java.awt.event.ActionEvent evt) {
        if (jComboBox2.getSelectedItem().toString().equalsIgnoreCase("Coustome")) {
            jTextField4.setEnabled(true);
            jTextField5.setEnabled(true);
            VSpaceTextField.setEnabled(false);
            VSpaceTextField.setText("0");
            HspaceTextField.setEnabled(false);
            HspaceTextField.setText("0");
            HspaceLabel.setText("Not Applicable");
            VspaceLabel.setText("Not Applicable");
        } else {
            jTextField4.setEnabled(false);
            jTextField4.setText("0");
            jTextField5.setEnabled(false);
            jTextField5.setText("0");
            if (jComboBox2.getSelectedItem().toString().equalsIgnoreCase("Top Left")) {
                HspaceLabel.setText("Space from Left Edge");
                VspaceLabel.setText("Space from Top Edge");
                HspaceTextField.setEnabled(true);
                HspaceTextField.setText("0");
                VSpaceTextField.setEnabled(true);
                VSpaceTextField.setText("0");
            } else if (jComboBox2.getSelectedItem().toString().equalsIgnoreCase("Top Center")) {
                HspaceLabel.setText("Not Applicable");
                VspaceLabel.setText("Space from Top Edge");
                HspaceTextField.setEnabled(false);
                HspaceTextField.setText("0");
                VSpaceTextField.setEnabled(true);
                VSpaceTextField.setText("0");
            } else if (jComboBox2.getSelectedItem().toString().equalsIgnoreCase("Top Right")) {
                HspaceLabel.setText("Space from Right Edge");
                VspaceLabel.setText("Space from Top Edge");
                HspaceTextField.setEnabled(true);
                HspaceTextField.setText("0");
                VSpaceTextField.setEnabled(true);
                VSpaceTextField.setText("0");
            } else if (jComboBox2.getSelectedItem().toString().equalsIgnoreCase("Middle Left")) {
                HspaceLabel.setText("Space from Left Edge");
                VspaceLabel.setText("Not Applicable");
                HspaceTextField.setEnabled(true);
                HspaceTextField.setText("0");
                VSpaceTextField.setEnabled(false);
                VSpaceTextField.setText("0");
            } else if (jComboBox2.getSelectedItem().toString().equalsIgnoreCase("Middle Center")) {
                HspaceLabel.setText("Not Applicable");
                VspaceLabel.setText("Not Applicable");
                VSpaceTextField.setEnabled(false);
                VSpaceTextField.setText("0");
                HspaceTextField.setEnabled(false);
                HspaceTextField.setText("0");
            } else if (jComboBox2.getSelectedItem().toString().equalsIgnoreCase("Middle Right")) {
                HspaceLabel.setText("Space from Right Edge");
                VspaceLabel.setText("Not Applicable");
                HspaceTextField.setEnabled(true);
                HspaceTextField.setText("0");
                VSpaceTextField.setEnabled(false);
                VSpaceTextField.setText("0");
            } else if (jComboBox2.getSelectedItem().toString().equalsIgnoreCase("Bottom Left")) {
                HspaceLabel.setText("Space from Left Edge");
                VspaceLabel.setText("Space from Bottom Edge");
                HspaceTextField.setEnabled(true);
                HspaceTextField.setText("0");
                VSpaceTextField.setEnabled(true);
                VSpaceTextField.setText("0");
            } else if (jComboBox2.getSelectedItem().toString().equalsIgnoreCase("Bottom Center")) {
                HspaceLabel.setText("Not Applicable");
                VspaceLabel.setText("Space from Bottom Edge");
                HspaceTextField.setEnabled(false);
                HspaceTextField.setText("0");
                VSpaceTextField.setEnabled(true);
                VSpaceTextField.setText("0");
            } else if (jComboBox2.getSelectedItem().toString().equalsIgnoreCase("Bottom Right")) {
                HspaceLabel.setText("Space from Right Edge");
                VspaceLabel.setText("Space from Bottom Edge");
                HspaceTextField.setEnabled(true);
                HspaceTextField.setText("0");
                VSpaceTextField.setEnabled(true);
                VSpaceTextField.setText("0");
            }
        }
    }

    /**
     * Opens Color Chooser for choosing color
     *
     * @param Button click Evnet
     */
    private void ChooseColor(java.awt.event.ActionEvent evt) {
        jSColorChooser1 = new javax.swing.JColorChooser();
        shapeColor = javax.swing.JColorChooser.showDialog(
                ShapeGUI.this,
                "Choose Color",
                jPanel4.getBackground());
        if (shapeColor != null) {
            jPanel4.setBackground(shapeColor);
        } else {
            shapeColor = jPanel4.getBackground();
        }

    }

    /**
     * Cancel action for add or edit of Text Watermarker.
     *
     */
    private void Cancel(java.awt.event.ActionEvent evt) {
        this.dispose();
        shapeHelper.setEnable(shapeHelper.getMainFrame());
        shapeHelper.getMainStatus().setText(shapeHelper.getProperty("message.shape.close"));
    }

    /**
     * Validate data input data and add/update ShapeGUI Watermarker
     *
     * @param  Button click Evnet
     */
    private void AddShapeWatermarker(java.awt.event.ActionEvent evt) {
        if (Integer.parseInt(jTextField1.getText()) > 2 && Integer.parseInt(jTextField2.getText()) > 2) {
            ArrayList ShapeData = new ArrayList();
            ShapeData.add("SHAPE");
            ShapeData.add(null);
            ShapeData.add(jComboBox1.getSelectedItem().toString());
            ShapeData.add(null);
            ShapeData.add(null);
            ShapeData.add(jTextField1.getText());
            ShapeData.add(jTextField2.getText());
            ShapeData.add(null);
            ShapeData.add(shapeColor);
            ShapeData.add(jSlider1.getValue());
            ShapeData.add(jComboBox2.getSelectedItem().toString());
            ShapeData.add(jTextField4.getText());
            ShapeData.add(jTextField5.getText());
            ShapeData.add(HspaceTextField.getText());
            ShapeData.add(VSpaceTextField.getText());
            if (isUpdate) {
                shapeHelper.getWaterMarkerList().set(updateIndex, ShapeData);
                shapeHelper.Info("Updating Shape Watermarker at Index:" + updateIndex + " with Parameters List: " + ShapeData);
            } else {
                shapeHelper.getWaterMarkerList().add(ShapeData);
                shapeHelper.Info("Adding Shape Watermarker with Parameters List: " + ShapeData);
            }
            shapeHelper.getMainWaterMarksDetails().removeAll();
            shapeHelper.setWaterMarkDetails();
            shapeHelper.getMainStatus().setText(shapeHelper.getProperty("message.shape.success"));
            this.dispose();
            shapeHelper.setEnable(shapeHelper.getMainFrame());
        } else {
            javax.swing.JOptionPane.showMessageDialog(jPanel1, shapeHelper.getProperty("message.shape.warning.3pix"));
        }
    }

    /**
     * Y position validation .
     *
     * @param Focus loose event
     */
    private void SapeYpositionIntCheckActio(java.awt.event.FocusEvent evt) {
        String XVal = jTextField5.getText();
        if (!shapeHelper.checkInteger(XVal)) {
            javax.swing.JOptionPane.showMessageDialog(jPanel1, shapeHelper.getProperty("message.warning.YPosition.Value"));
            jTextField5.setText("0");
        }
    }

    /**
     * ShapeGUI Height Validation
     */
    private void SapeHeightCheckNumber(java.awt.event.FocusEvent evt) {
        shapeHelper.checkNumber(jTextField2);
    }

    /**
     * ShapeGUI Width Validation
     */
    private void SapeWidthCheckNumber(java.awt.event.FocusEvent evt) {
        shapeHelper.checkNumber(jTextField1);
    }

    /**
     * X position validation .
     *
     * @param Focus loose event
     */
    private void XcheckNumber(java.awt.event.FocusEvent evt) {
        shapeHelper.checkNumber(jTextField4);
    }

    /**
     * Y position validation .
     *
     * @param Focus loose event
     */
    private void YcheckNumber(java.awt.event.FocusEvent evt) {
        shapeHelper.checkNumber(jTextField5);
    }

    /**
     * H Space Validation
     */
    private void HspaceNumberCheck(java.awt.event.FocusEvent evt) {
        shapeHelper.checkNumber(HspaceTextField);

    }

    /**
     *V Space Validation
     */
    private void VspaceNumberCheck(java.awt.event.FocusEvent evt) {
        shapeHelper.checkNumber(VSpaceTextField);
    }
    // Variables declaration - do not modify
    private javax.swing.JLabel HspaceLabel;
    private javax.swing.JTextField HspaceTextField;
    private javax.swing.JTextField VSpaceTextField;
    private javax.swing.JLabel VspaceLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JColorChooser jSColorChooser1;
    // End of variables declaration
}

@SuppressWarnings("serial")
class ShapeNumericTextField extends JTextField {

    @Override
    protected Document createDefaultModel() {
        return new NumericDocument();
    }

    private static class NumericDocument extends PlainDocument {
        // The regular expression to match input against (zero or more digits)

        private final static Pattern DIGITS = Pattern.compile("\\d*");

        @Override
        public void insertString(int offs, String str, AttributeSet a) throws BadLocationException {
            // Only insert the text if it matches the regular expression
            if (str != null && DIGITS.matcher(str).matches()) {
                super.insertString(offs, str, a);
            }
        }
    }
}
